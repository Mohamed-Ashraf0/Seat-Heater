/**
 * main.c
 */
#include "FreeRTOS.h"
#include "task.h"
#include "event_groups.h"
#include "semphr.h"
#include "timers.h"
#include <stdint.h>
#include "uart0.h"
#include "adc0-1.h"
#include "GPTM.h"
#include "GPIO.h"

/**
 * @brief Functions that implement FreeRTOS tasks.
 */
static void prvHighPriorityTask( void * pvParams );
static void prvLowPriorityTask( void * pvParams );
/*-----------------------------------------------------------*/

/**
 * @brief Mutex used in this program.
 */
static SemaphoreHandle_t xMutex = NULL;
/*-----------------------------------------------------------*/

int main(void)
{
    UART0_Init();
    BaseType_t xTaskCreationResult = pdFAIL;
    xTaskCreationResult = xTaskCreate( prvHighPriorityTask,
                                           "High",
                                           configMINIMAL_STACK_SIZE,
                                           NULL,
                                           tskIDLE_PRIORITY+1,
                                           NULL );
        configASSERT( xTaskCreationResult == pdPASS );

        xTaskCreationResult = xTaskCreate( prvLowPriorityTask,
                                           "Low",
                                           configMINIMAL_STACK_SIZE,
                                           NULL,
                                           tskIDLE_PRIORITY,
                                           NULL );
        configASSERT( xTaskCreationResult == pdPASS );
        xMutex = xSemaphoreCreateMutex();
        configASSERT( xMutex != NULL );
        vTaskStartScheduler();

    for(;;) {} // Should never reach here
}
/*-----------------------------------------------------------*/

static void prvHighPriorityTask( void * pvParams )
{
    /* Silence warning about unused parameters. */
    ( void ) pvParams;
    TickType_t xLastWakeTime = xTaskGetTickCount();
    for( ;; )
    {
        vTaskDelayUntil( &xLastWakeTime, pdMS_TO_TICKS( 1000 ) );
        xSemaphoreTake( xMutex, portMAX_DELAY );
    }
}
/*-----------------------------------------------------------*/

static void prvLowPriorityTask( void * pvParams )
{
    /* Silence warning about unused parameters. */
    ( void ) pvParams;
    TickType_t xLastWakeTime = xTaskGetTickCount();
    xSemaphoreTake( xMutex, portMAX_DELAY );

    for( ;; )
    {
        UART0_SendString("Task priority is");
        UART0_SendNumber(uxTaskPriorityGet( NULL ));
        UART0_SendString(" \r\n\n**************************************\r\n\n");
        vTaskDelayUntil( &xLastWakeTime, pdMS_TO_TICKS( 1000 ) );
    }
}
/*-----------------------------------------------------------*/
void ADC0SS0_HANDLER(void) {}
void ADC1SS0_HANDLER(void) {}
void GPIOPortF_Handler(void) {}
