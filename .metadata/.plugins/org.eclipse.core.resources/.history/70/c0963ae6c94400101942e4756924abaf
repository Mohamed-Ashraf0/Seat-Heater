/*
 * GPIO.c
 *
 *  Created on: Jun 7, 2025
 *      Author: Mohamed Ashraf
 */
#include "GPIO.h"
/**
 * @brief Initializes GPIO Port F for:
 *        - LEDs on PF1 (Red), PF2 (Blue), PF3 (Green) as outputs
 *        - Buttons on PF4 (SW1) and PF0 (SW2) as inputs with pull-up
 *        - Configures interrupt on falling edge for both buttons
 */
void GPIO_Init(void)
{   //PF0,1,2,3,4
    SYSCTL_RCGCGPIO_R |= 0x20; //Enable clock port f
    while(!(SYSCTL_PRGPIO_R & 0x20));// wait until peripheral ready
    GPIO_PORTF_LOCK_R =  0x4C4F434B;//allow write in port f
    GPIO_PORTF_CR_R   |= (1<<0);   //allow change to pf0
    GPIO_PORTF_AFSEL_R &= 0xE0;  //disable alternae function for pf0,1,2,3,4
    GPIO_PORTF_PCTL_R  &= 0xFFF00000;
    GPIO_PORTF_AMSEL_R &= 0xE0;   //disable analog for pf0,1,2,3,4
    GPIO_PORTF_DEN_R   |= 0x1F;   //enable digital for pf0,1,2,3,4
    GPIO_PORTF_DIR_R   &= ~(1<<0) & ~(1<<4);  //pf0,4 input
    GPIO_PORTF_DIR_R   |= ((1<<1) | (1<<2) | (1<<3)); //pf1,2,3 output
    GPIO_PORTF_PUR_R   |= ((1<<0)|(1<<4)); //enable pull up for pf0,4
    // Configure interrupts for falling edge (both PF4 & PF0)
    GPIO_PORTF_IS_R &= ~0x11;       // Edge-sensitive (not level)
    GPIO_PORTF_IBE_R &= ~0x11;      // Not both edges (only falling)
    GPIO_PORTF_IEV_R &= ~0x11;      // Falling edge (high -> low)
    GPIO_PORTF_ICR_R |= 0x11;       // Clear prior interrupts
    GPIO_PORTF_IM_R |= 0x11;        // Unmask (enable) PF4 & PF0 interrupts

    // Set NVIC priority and enable Port F interrupt
    NVIC_PRI7_R = (NVIC_PRI7_R & 0xFF01FFFF) | (5 << 21);  // Priority 5
    NVIC_EN0_R |= (1 << 30);        // Enable IRQ30 (Port F)
}
/**
 * @brief Turns on the Red LED (PF1)
 */
void RedLedOn(void) {
    GPIO_PORTF_DATA_R |= (1 << 1);
}
void ExtRedLedOn(void) {
}
/**
 * @brief Turns off the Red LED (PF1)
 */
void RedLedOff(void) {
    GPIO_PORTF_DATA_R &= ~(1 << 1);
}

/**
 * @brief Turns on the Green LED (PF3)
 */
void GreenLedOn(void) {
    GPIO_PORTF_DATA_R |= (1 << 3);
}
void ExtGreenLedOn(void) {
}
/**
 * @brief Turns off the Green LED (PF3)
 */
void GreenLedOff(void) {
    GPIO_PORTF_DATA_R &= ~(1 << 3);
}

/**
 * @brief Turns on the Blue LED (PF2)
 */
void BlueLedOn(void) {
    GPIO_PORTF_DATA_R |= (1 << 2);
}
void ExtBlueLedOn(void) {
    GPIO_PORTF_DATA_R |= (1 << 2);
}
/**
 * @brief Turns off the Blue LED (PF2)
 */
void BlueLedOff(void) {
    GPIO_PORTF_DATA_R &= ~(1 << 2);
}

/**
 * @brief Turns on all LEDs (Red, Blue, Green)
 */
void AllLedOn(void) {
    GPIO_PORTF_DATA_R |= (0x0E);  // Sets PF1, PF2, PF3 (binary 1110)
}

/**
 * @brief Turns off all LEDs (Red, Blue, Green)
 */
void AllLedOff(void) {
    GPIO_PORTF_DATA_R &= ~(0x0E); // Clears PF1, PF2, PF3
}
void ExtAllLedOff(void) {
}

